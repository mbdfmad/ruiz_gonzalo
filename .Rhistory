usethis::create_github_token()
gitcreds::gitcreds_set()
setwd("~/Documents/Master Big Data/FMAD/S4")
# Comprobamos el directorio de trabajo
getwd()
rm(list=ls()) # Borra todos los objetos del entorno
rstudioapi::restartSession() # Reinicia la sesión de R
cat("\014") # Es Ctrl + L para limpiar la Consola
# Comprobamos el directorio de trabajo
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gapminder)
names(gapminder)
gapminder %>%
select(lifeExp, gdpPercap) %>% head(3)
# Comprobamos el directorio de trabajo
getwd()
# Datos del fichero. La url, incluyendo el nombre del fichero.
file_url <-   ""
# Comprobamos el directorio de trabajo
getwd()
# Comprobamos el directorio de trabajo
getwd()
dado_honesto=sample(1:6, size = 100, replace = TRUE)
(dado_honesto=sample(1:6, size = 100, replace = TRUE))
table(dado_honesto)
count(dado_honesto)
library(tidyverse)
count(dado_honesto)
dado_honesto=sample(1:6, size = 100, replace = TRUE)
count(dado_honesto)
dado_honesto %>% count()
count() help("count")
help("count")
1:100
dado <-
data.frame(A = 1:100, dado_honesto = sample(1:6, size = 100, replace = TRUE))
dado %>% count(dado$dado_honesto)
library(tidyverse)
dado_honesto=sample(1:6, size = 100, replace = TRUE)
table(dado_honesto)
dado <-
data.frame(A = 1:100, dado_A = dado_honesto)
dado %>% count(dado$dado_honesto)
dado_honesto=sample(1:6, size = 100, replace = TRUE)
table(dado_honesto)
dado <-
data.frame(A = 1:100, dado_A = dado_honesto)
dado %>% count(dado$dado_honesto)
dado %>% count(dado$dado_A)
signif(prop.table(table(dado$dado_A)), 2)
help("mutate")
dado %>% count(dado$dado_A)
prop.table(dado$dado_A)
dado %>%
count(dado_A) %>%
mutate(dado_A, relFreq = prop.table(n), n=NULL)
signif(prop.table(table(dado$dado_A)), 2)
#Dado cargado
help("sample")
#Dado cargado
pesos=c(1/7*5)
c(1/7*5)
c(1/7)*5
pesos=c(1/7, 1/7, 1/7, 1/7, 1/7, 2/7)
dado_honesto=sample(1:6, size = 100, replace = TRUE, prob=pesos)
(dado_honesto=sample(1:6, size = 100, replace = TRUE, prob=pesos))
rep(1,3)
rep(1,2:3)
rep(1,2,4)
#Uso de rep y seq
v1= rep(1,2)
rep(1,2)
rep(1:3,4)
rep(rep(1,4),4)
rep(rep(1:4,4),4)
help("rep")
seq(1,4)
help("seq")
seq(1,4,rep(1,4))
seq(rep(1,4))
seq(rep(1,4),1,4)
help("rep")
help("seq")
#Uso de rep y seq
rep(1,4,seq(1,4))
#Uso de rep y seq
rep(seq(1,4))
#Uso de rep y seq
rep(seq(1,4),4)
seq(rep(1,4))
seq(rep(1,4),4)
help("seq")
seq(rep(1,4),1,4)
seq(1,4,rep(1,4))
seq(1,4,rep(1,4))
seq(1,4,by =1,rep(1,4))
seq(1,4,by =1,along.with=NULL,rep(1,4))
seq(1,4, by=1, along.with=4, rep(1,4))
seq(1,4, by=1, rep(1,4))
#Uso de rep y seq
help("rep")
#Uso de rep y seq
rep(1,4,4)
#Uso de rep y seq
rep(1,4,each=4)
#Uso de rep y seq
rep(1:4,each=4)
#Uso de rep y seq
rep(4:1,each=4)
seq(4,1)
help("seq")
seq(4,1,by=4)
seq(4,1,by=2)
seq(4,1,by=1)
seq(4,1,by=-1)
v1=rep(1:5,each=seq(1,5))
seq(1,5)
v1=rep(1:5,each=seq(1,5))
help("rep")
v1=rep(1:5,times=seq(1,5))
rep(1:5,times=seq(1,5))
v3=rep(1:4,4)
rep(1:4,4)
mpg
#Tabla mpg2
gapminder %>% select ()%>%
help("select")
#Tabla mpg2
gapminder %>% select ()%>%
help("select")
#Tabla mpg2
gapminder %>% select ()%>%
help("select")
edades
#Tabla mpg2
gapminder %>% select ()%>%
mpg$
mpg$
#Tabla mpg2
gapminder %>% select ()%>%
mpg$
mpg$
#Tabla mpg2
gapminder %>% select ()%>%
mpg
#Tabla mpg2
gapminder %>% select ()%>%
mpg
mpg
mpg$
#Tabla mpg2
gapminder %>% select ()%>%
help("select")
help("select")
gapminder %>% select (starts_with(c))
gapminder %>% select (starts_with(c))
library(gapminder)
gapminder %>% select (starts_with(c))
library(gapminder)
gapminder %>% select (starts_with(c))
gapminder %>% select (starts_with(c))
source("~/Documents/Master Big Data/FMAD/ruiz_gonzalo/Ejercicios_Práctica0.R")
source("~/Documents/Master Big Data/FMAD/ruiz_gonzalo/Ejercicios_Práctica0.R")
setwd("~/Documents/Master Big Data/FMAD/ruiz_gonzalo")
help("select")
#Tabla mpg2
mpg %>% select (starts_with(c))
#Tabla mpg2
mpg %>% select (starts_with(c))
#Tabla mpg2
mpg %>% select (starts_with("c"))
#Tabla mpg2
mpg %>% select (starts_with("c")) %>% filter(class = "pickup")
#Tabla mpg2
mpg %>% select (starts_with("c")) %>% filter(class == "pickup")
#Tabla mpg2
mpg %>% select (starts_with("c")) %>% filter(class == "pickup")
#Tabla mpg2
mpg %>% select (starts_with("c")) %>% filter(class == "pickup") -> mpg2
mpg2
library(haven)
census <- read_dta("data/census.dta")
census
##¿Cuáles son las poblaciones totales de las regiones censales?
census %>% group_by(region)
##¿Cuáles son las poblaciones totales de las regiones censales?
census %>% group_by(region) %>% summarise(sum(pop))
##¿Cuáles son las poblaciones totales de las regiones censales?
census %>% group_by(region) %>% poblacion=summarise(sum(pop))
##¿Cuáles son las poblaciones totales de las regiones censales?
census %>% group_by(region) %>% summarise(  poblacion=sum(pop))
##¿Cuáles son las poblaciones totales de las regiones censales?
census %>% group_by(region) %>% summarise( poblacion=sum(pop) ) -> censoT
ggplot(censoT) +
geom_bar(mapping = aes(x = region), fill= viridis(5))
##Representa esas poblaciones totales en un diagrama de barras (una barra por región censal)
library(viridisLite)
ggplot(censoT) +
geom_bar(mapping = aes(x = region), fill= viridis(5))
ggplot(censoT) +
geom_bar(mapping = aes(x = region), fill= viridis(5))
censoT
library(viridisLite)
ggplot(accidentes) +
geom_bar(mapping = aes(x = TrkType), fill= viridis(5))
setwd("~/Documents/Master Big Data/FMAD/fmad2122")
library(readxl)
accidentes = read_excel("./data/train_acc_2010.xls")
library(viridisLite)
ggplot(accidentes) +
geom_bar(mapping = aes(x = TrkType), fill= viridis(5))
View(accidentes)
View(accidentes)
help("geom_bar")
ggplot(censoT) +
geom_bar(mapping = aes(x = region),data=población, fill= viridis(5))
ggplot(censoT) +
geom_bar(mapping = aes(x = region),data=poblacion, fill= viridis(5))
censoT
ggplot(censoT) +
geom_bar(mapping = aes(x = region, y=poblacion), fill= viridis(5))
ggplot(censoT) +
geom_bar(mapping = aes(x = region), fill= viridis(5))
character(5)
char(5)
str(5)
View(census)
##Ordena los estados por población, de mayor a menor.
census %>% order_by(pop)
help("order")
##Ordena los estados por población, de mayor a menor.
census %>% order(pop)
##Ordena los estados por población, de mayor a menor.
census %>% order(pop)
##Ordena los estados por población, de mayor a menor.
census %>% arrange(pop)
##Ordena los estados por población, de mayor a menor.
census %>% arrange_desd(pop)
##Ordena los estados por población, de mayor a menor.
census %>% arrange_dess(pop)
##Ordena los estados por población, de mayor a menor.
census %>% arrange_desc(pop)
##Ordena los estados por población, de mayor a menor.
census %>% arrang(desc(pop))
##Ordena los estados por población, de mayor a menor.
census %>% arrange(desc(pop))
geom_bar(mapping = aes(x = char(region), data=poblacion,fill= viridis(5))
ggplot(censoT) +
geom_bar(mapping = aes(x = char(region), data=poblacion,fill= viridis(5))
library(viridisLite)
ggplot(censoT) +
geom_bar(mapping = aes(x = char(region), data=poblacion,fill= viridis(5))
geom_bar(mapping = aes(x = char(region), data=poblacion,fill= viridis(5))
geom_bar(mapping = aes(x = char(region), data=poblacion,fill= viridis(5));
geom_bar(mapping = aes(x = char(region), data=poblacion,fill= viridis(5))
##Ordena los estados por población, de mayor a menor.
census %>% arrange(desc(pop))
ggplot(censoT, aes(region, poblacion)) +
geom_col()
ggplot(censoT, aes(region, poblacion)) +
geom_col(fill= viridis(5))
library(viridisLite)
ggplot(censoT, aes(region, poblacion)) +
geom_col(fill= viridis(5))
ggplot(censoT, aes(region, poblacion)) +
geom_col(fill= viridis(2))
geom_col(fill= viridis
ggplot(censoT, aes(region, poblacion)) +
geom_col(fill= viridis)
ggplot(censoT, aes(region, poblacion)) +
geom_col(fill= green)
ggplot(censoT, aes(region, poblacion)) +
geom_col(fill= "green")
ggplot(censoT, aes(region, poblacion)) +
geom_col(fill=viridis(4))
##Ordena los estados por población, de mayor a menor.
census %>% arrange(desc(pop))
setwd("~/Documents/Master Big Data/FMAD/ruiz_gonzalo")
##Crea una nueva variable que contenga la tasa de divorcios /matrimonios para cada estado.
census %>% summarise( rateDivMa=divorce/marriage )
##Crea una nueva variable que contenga la tasa de divorcios /matrimonios para cada estado.
census %>% summarise( state, rateDivMa=divorce/marriage )
##Crea una nueva variable que contenga la tasa de divorcios /matrimonios para cada estado.
census %>% summarise( state, rateDivMa=divorce/marriage ) %>% arrange(rateDivMa)
##
census
##
census %>% arrange(desc(medage))
##
census %>% arrange(medage)
##
###Criterio 1
census %>% arrange(medage) %>% head(10)
###Criterio 2
census %>% mutate(state ,Prop18=pop18p/pop) %>% arrange(Prop18) %>% head(10)
###Criterio 2
census %>% summarise(state ,Prop18=pop18p/pop) %>% arrange(Prop18) %>% head(10)
###Criterio 2
census %>% summarise(state ,Prop18=pop18p/pop,medage) %>% arrange(Prop18) %>% head(10)
###Criterio 2
census %>% summarise(state ,Prop18=pop18p/pop,medage) %>% arrange(medage) %>% head(10)
###Criterio 2
census %>% summarise(state ,Prop18=pop18p/pop,EdadMediana=medage) %>% arrange(medage) %>% head(10)
###Criterio 2
census %>% summarise(Estado=state ,Prop18=pop18p/pop, EdadMediana=medage) %>% arrange(EdadMediana) %>% head(10)
%>% arrange(EdadMediana) %>% head(10)
census %>% summarise(Estado=state ,Prop18=pop18p/pop, EdadMediana=medage)
%>% arrange(EdadMediana) %>% head(10)
##
census %>% summarise(Estado=state ,Prop18=pop18p/pop, EdadMediana=medage) %>%
arrange(EdadMediana) %>% head(10)
##
census %>%
summarise(Estado=state ,Prop18=pop18p/pop, EdadMediana=medage) %>%
arrange(EdadMediana) %>% head(10)
ggplot(censoT, aes(region, poblacion)) +
geom_col(fill=viridis(4))
##
ggplot(data=census)+geom_histogram(mapping = aes(census))
##
ggplot(data=census)+geom_histogram(mapping = aes(census))
##
ggplot(data=census)+geom_histogram(mapping = aes(census),size=1.5)
##
ggplot(data=census)+geom_histogram(mapping = aes(medage), size=1.5)
##
ggplot(data=census)+geom_histogram(mapping = aes(medage), size=3)
##
ggplot(data=census)+geom_histogram(mapping = aes(medage), size=1)
ggplot(censoT, aes(region, poblacion)) +
geom_col(fill=viridis(4))
##
ggplot(data=census)+geom_histogram(mapping = aes(medage))
##
ggplot(data=census)+geom_histogram(mapping = aes(medage))
##
ggplot(data=census)+geom_histogram(mapping = aes(medage),breaks=10)
##
ggplot(data=census)+geom_histogram(mapping = aes(medage))
##
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10)
##
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill("red"))
##
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")
+geom_density(medage)
+geom_density(mapping = aes(medage))
##
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")+geom_density(mapping = aes(medage))
##
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")+geom_density(mapping = aes(medage),y=stat(density))
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")
+geom_density(mapping = aes(medage),y=stat(density))
+geom_density(mapping = aes(medage))
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")
+geom_density(mapping = aes(medage))
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")+
geom_density(mapping = aes(medage))
##
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")+
geom_density(mapping = aes(medage,y=stat(density)))
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")+
geom_density(mapping = aes(medage,y=stat(density)))
##
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")+
geom_density(mapping = aes(medage))
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")+
geom_density(mapping = aes(medage))
##
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")+
geom_density(mapping = aes(medage),count)
##
ggplot(data=census)+geom_histogram(mapping = aes(medage),bins=10,fill="red")+
geom_density(mapping = aes(medage))
##
ggplot(data=census)+geom_histogram(mapping = aes(x=medage,y=stat(density),bins=10,fill="red")+
ggplot(data=census)+geom_histogram(mapping = aes(x=medage,y=stat(density),bins=10,fill="red")+
geom_density(mapping = aes(medage))
ggplot(data=census)+geom_histogram(mapping = aes(x=medage,y=stat(density),bins=10,fill="red")+
geom_density(mapping = aes(medage))
ggplot(data=census)+geom_histogram(mapping = aes(x=medage,y=stat(density),bins=10,fill="red")+
geom_density(mapping = aes(medage))
##
ggplot(data=census)+geom_histogram(mapping = aes(x=medage,y=stat(density)),bins=10,fill="red")+
geom_density(mapping = aes(medage))
ggplot(data=census)+geom_histogram(mapping = aes(x=medage,y=stat(density)),bins=10,fill="red")+
geom_density(mapping = aes(medage))
census %>% group_by(region) %>% summarise( poblacion=sum(pop) )
census %>% group_by(region) %>% summarise( poblacion=sum(pop) )
library(tidyverse)
census %>% group_by(region) %>% summarise( poblacion=sum(pop) )
census <- read_dta("data/census.dta")
#Tabla census
library(haven)
census <- read_dta("data/census.dta")
census %>% group_by(region) %>% summarise( poblacion=sum(pop) )
